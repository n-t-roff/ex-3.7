VERSION=3.7
#
# Ex skeletal makefile for VAX VM/Unix 4.1BSD
#
# NB: This makefile doesn't indicate any dependencies on header files.
#
# Ex is very large - this version will not fit on PDP-11's without overlay
# software.  Things that can be turned off to save
# space include LISPCODE (-l flag, showmatch and lisp options), UCVISUAL
# (visual \ nonsense on upper case only terminals), CHDIR (the undocumented
# chdir command.)  CRYPT includes the code to edit encrypted files (the -x
# option, like ed.)  VMUNIX makes ex considerably larger, raising many limits
# and improving speed and simplicity of maintenance.  It is suitable only
# for a VAX or other large machine, and then probably only in a paged system.
#
# Don't define VFORK unless your system has the VFORK system call,
# which is like fork but the two processes have only one data space until the
# child execs. This speeds up ex by saving the memory copy.
#
# If your system expands tabs to 4 spaces you should -DTABS=4 below
#
PREFIX=	${DESTDIR}/usr/local
BINDIR=	${PREFIX}/bin
LIBDIR=	${PREFIX}/libexec
MANDIR=	${PREFIX}/share/man
SHAREDIR=${PREFIX}/share/ex/${VERSION}
PRESERVEDIR=/var/preserve
LIBMALLOCDIR=libmapmalloc/common
#
# If the D_SBRK line is uncommented, ex uses sbrk for memory allocation.
# In this case excactly *one* of the following MALLOC_O lines needs to be
# uncommented.
# If the D_SBRK line is commented out, ex uses malloc and realloc instead of
# sbrk.  In this case both following MALLOC_O lines need to be commented out.
#
#D_SBRK=	-DUNIX_SBRK
#
# mapmalloc from Heirloom vi.  Does not work with ASAN compiler option.
#
#MALLOC_O=mapmalloc.o
#
# libmapmalloc from OpenSolaris rev0
#
#MALLOC_O=${LIBMALLOCDIR}/libmapmalloc.a
#
CTAGS=	${BINDIR}/ctags
DEBUGFLAGS=-Wall -Wextra \
	#-g -O0 -fno-omit-frame-pointer -fno-optimize-sibling-calls \
	-fsanitize=undefined -fsanitize=integer -fsanitize=address
NONDEBUGFLAGS=	
DEB=	${DEBUGFLAGS}	# or ${DEBUGFLAGS} to to debug
OPTIONS=-DLISPCODE -DCHDIR -DUCVISUAL -DVMUNIX -DSTDIO -DUSG3TTY \
	-DTABS=8 ${D_SBRK} -DBIT8
_CFLAGS=${CFLAGS} ${OPTIONS} ${DEB} \
	-DLIBDIR='"${LIBDIR}"' -DVERSION='"${VERSION}"' \
	-DPRESERVEDIR='"${PRESERVEDIR}"'
_LDFLAGS=${LDFLAGS} ${DEB} ${DEFINES} -s
OBJS=	ex.o ex_addr.o ex_cmds.o ex_cmds2.o ex_cmdsub.o \
	ex_data.o ex_extern.o ex_get.o ex_io.o ex_put.o ex_re.o \
	ex_set.o ex_subr.o ex_temp.o ex_tty.o ex_unix.o \
	ex_v.o ex_vadj.o ex_vget.o ex_vmain.o ex_voper.o \
	ex_vops.o ex_vops2.o ex_vops3.o ex_vput.o ex_vwind.o \
	printf.o ${MALLOC_O}

.c.o:
	${CC} ${_CFLAGS} -c $<

all:	a.out exrecover expreserve #tags

a.out: ${OBJS}
	${CC} ${_LDFLAGS} ${OBJS} ${TERMLIB}

tags:	/tmp
	${CTAGS} -w ex.[hc] ex_*.[hc]

${OBJS}: ex.h #ex_vars.h

ex_vars.h: ex_data.c makeoptions
	csh makeoptions ${CC} -E ${OPTIONS}

exrecover: exrecover.o
	${CC} ${_LDFLAGS} -o $@ exrecover.o ex_extern.o

expreserve: expreserve.o
	${CC} ${_LDFLAGS} -o $@ expreserve.o

clean:
#	If we dont have ex we cant make it so dont rm ex_vars.h
	-rm -f a.out exrecover expreserve strings core errs trace
	-rm -f *.o x*.[cs]
	cd ${LIBMALLOCDIR} && make clean

distclean: clean
	rm -f Makefile config.log

install: ${BINDIR} ${LIBDIR} ${MANDIR}/man1 ${SHAREDIR} ${PRESERVEDIR}
	install a.out ${BINDIR}/ex
	for i in vi view edit; do \
		ln -sf ${BINDIR}/ex ${BINDIR}/$$i; \
	done
	for i in ex vi; do \
		install -m 644 $$i.1 ${MANDIR}/man1/; \
	done
	ln -sf ${MANDIR}/man1/ex.1 ${MANDIR}/man1/edit.1
	ln -sf ${MANDIR}/man1/vi.1 ${MANDIR}/man1/view.1
	for i in recover preserve; do \
		install ex$$i ${LIBDIR}/ex${VERSION}$$i; \
	done
	install -m 644 doc/*.pdf ${SHAREDIR}/

uninstall:
	for i in ex vi view edit; do \
		rm -f ${BINDIR}/$$i; \
		rm -f ${MANDIR}/man1/$$i.1; \
	done
	for i in recover preserve; do \
		rm -f ${LIBDIR}/ex${VERSION}$$i; \
	done
	rm -rf ${SHAREDIR}

${BINDIR} ${LIBDIR} ${MANDIR}/man1 ${SHAREDIR}:
	mkdir -p $@

${PRESERVEDIR}:
	mkdir -p $@
	chmod 1777 $@

${LIBMALLOCDIR}/libmapmalloc.a:
	cd ${LIBMALLOCDIR} && make CFLAGS="${CFLAGS} ${DEB} ${DEFINES}"
